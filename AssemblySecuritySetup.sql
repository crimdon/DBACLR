/**********************************************
 * Script:  AssemblySecuritySetup.sql
 * Date:    2016-01-20
 * By:      Solomon Rutzky
 * Of:      Sql Quantum Leap ( http://SqlQuantumLeap.com )
 * 
 * Stairway to SQLCLR - Level 6: Development Tools
 *
 * Stairway to SQLCLR series:
 * http://www.sqlservercentral.com/stairway/105855/
 * 
 **********************************************/


USE [master];
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
SET NOCOUNT ON;
GO
--------------------------------------------------------------------------------

DECLARE @ErrorMessage NVARCHAR(4000);


-- We first need to create the Assembly containing just
-- the Key info so that we can get the "thumbprint" /
-- "publickeytoken" value from it. That value is used to
-- determine if the Asymmetric Key and Login already exist.
--
-- We only need this Assembly temporarily, so create within
-- a transaction to guarantee cleanup if something fails.

DECLARE	@AssemblyName sysname, -- keep lower-case for servers with case-sensitive / binary collations
		@AsymmetricKeyName sysname, -- keep lower-case for servers with case-sensitive / binary collations
		@LoginName sysname, -- keep lower-case for servers with case-sensitive / binary collations
		@PublicKeyToken VARBINARY(32),
		@SQL NVARCHAR(MAX);

SET @AssemblyName = N'$StairwayToSQLCLR-TEMPORARY-KeyInfo$';

SET @AsymmetricKeyName = N'StairwayToSQLCLR-06_PermissionKey';
SET @LoginName = N'StairwayToSQLCLR-06_PermissionLogin';

BEGIN TRY
	BEGIN TRAN;

	IF (NOT EXISTS(
				SELECT	*
				FROM		[sys].[assemblies] sa
				WHERE	[sa].[name] = @AssemblyName
			)
		)
	BEGIN
		SET @SQL = N'
		CREATE ASSEMBLY [' + @AssemblyName + N']
			AUTHORIZATION [dbo]
-- Insert the result of the following command, found in _TempAssembly.sql, here:
-- FINDSTR /I /C:"FROM 0x" KeyInfo_Create.sql > _TempAssembly.sql
		    FROM ;
';
		EXEC (@SQL);
	END;


	SET @PublicKeyToken = CONVERT(VARBINARY(32), ASSEMBLYPROPERTY(@AssemblyName, 'PublicKey'));

	IF (NOT EXISTS(
				SELECT	*
				FROM		[sys].[asymmetric_keys] sak
				WHERE	sak.[thumbprint] = @PublicKeyToken
			)
		)
	BEGIN
		SET @SQL = N'
		CREATE ASYMMETRIC KEY [' + @AsymmetricKeyName + N']
			AUTHORIZATION [dbo]
			FROM ASSEMBLY [' + @AssemblyName + N'];';
		EXEC (@SQL);
	END;

	SET @SQL = N'DROP ASSEMBLY [' + @AssemblyName + N'];';
	EXEC (@SQL);

	COMMIT TRAN;
END TRY
BEGIN CATCH
	IF (@@TRANCOUNT > 0)
	BEGIN
		ROLLBACK TRAN;
	END;

	SET @ErrorMessage = ERROR_MESSAGE();
	RAISERROR(@ErrorMessage, 16, 1);
	RETURN; -- exit the script
END CATCH;


-- If the Asymmetric Key exists but the Login does not exist, we need to:
-- 1) Create the Login
-- 2) Grant the appropriate permission
IF (EXISTS(
			SELECT	*
			FROM		[sys].[asymmetric_keys] sak
			WHERE	sak.[thumbprint] = @PublicKeyToken
		)
	) AND
	(NOT EXISTS(
			SELECT		*
			FROM			[sys].[server_principals] sp
			INNER JOIN	[sys].[asymmetric_keys] sak
					ON	sak.[sid] = sp.[sid]
			WHERE	sak.[thumbprint] = @PublicKeyToken
		)
	)
BEGIN
	BEGIN TRY
		BEGIN TRAN;

		SET @SQL = N'
		CREATE LOGIN [' + @LoginName + N']
			FROM ASYMMETRIC KEY [' + @AsymmetricKeyName + N'];';
		EXEC (@SQL);

		SET @SQL = N'
		GRANT EXTERNAL ACCESS ASSEMBLY TO [' + @LoginName + N'];
		-- OR, comment out the GRANT statement above, and uncomment the following:
		-- GRANT UNSAFE ASSEMBLY TO [' + @LoginName + N'];
		';
		EXEC (@SQL);

		COMMIT TRAN;
	END TRY
	BEGIN CATCH
		IF (@@TRANCOUNT > 0)
		BEGIN
			ROLLBACK TRAN;
		END;

		SET @ErrorMessage = ERROR_MESSAGE();
		RAISERROR(@ErrorMessage, 16, 1);
		RETURN; -- exit the script
	END CATCH;
END;
--------------------------------------------------------------------------------


